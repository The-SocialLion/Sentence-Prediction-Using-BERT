# -*- coding: utf-8 -*-
"""SPUB.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cqgT4kKo8l52Rs_hozQQBVFZK8atvd8g

#**Sentence Prediction using Bert**
"""

pip install transformers

from transformers import BertTokenizer, BertForNextSentencePrediction
import torch

tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')
model = BertForNextSentencePrediction.from_pretrained('bert-base-uncased')

text = ("After Abraham Lincoln won the November 1860 presidential election on an "
        "anti-slavery platform, an initial seven slave states declared their "
        "secession from the country to form the Confederacy.")
text2 = ("War broke out in April 1861 when secessionist forces attacked Fort "
         "Sumter in South Carolina, just over a month after Lincoln's "
         "inauguration.")
# the text2 is a continuation of text (correlating sentences)

text1=("Rome  is the capital city and a special comune of Italy (named Comune di Roma Capitale), as well as the capital of the Lazio region " 
       "The city has been a major human settlement for almost three millennia. With 2,860,009 residents in 1,285 km2 (496.1 sq mi) it is also the country's most populated comune " 
       "It is the third most populous city in the European Union by population within city limits " 
       "It is the centre of the Metropolitan City of Rome, which has a population of 4,355,725 residents, thus making it the most populous metropolitan city in Italy " 
       "Its metropolitan area is the third-most populous within Italy.[3] Rome is located in the central-western portion of the Italian Peninsula, within Lazio (Latium), along the shores of the Tiber "
       "Vatican City (the smallest country in the world)[4] is an independent country inside the city boundaries of Rome, the only existing example of a country within a city for this reason Rome has sometimes been defined as the capital of two states 
       "Rome's Neighbouring country/city  Carthage was one of its worst rival as due to the competetion of trade and goods and services ")
text3=("Carthage was the capital city of the ancient Carthaginian civilization, on the eastern side of the Lake of Tunis in what is now Tunisia " 
       "Carthage was the most important trading hub of the Ancient Mediterranean and one of the most affluent cities of the classical world "
       "The city developed from a Phoenician colony into the capital of a Punic empire which dominated large parts of the Southwest Mediterranean during the first millennium BC " 
       "The legendary Queen Alyssa or Dido is regarded as the founder of the city, though her historicity has been questioned "
       "According to accounts by Timaeus of Tauromenium, she purchased from a local tribe the amount of land that could be covered by an oxhide ")
# the text3 is a continuation of text1 (correlating sentences(twisted))

"""**The three fundamental steps to complete the same are**

**Tokenization,**
**Create classification label and**
**Calculate loss**

#**Tokenization**
"""

help(tokenizer)

inputs = tokenizer(text, text2, return_tensors='pt')
inputs.keys()

inputs1 = tokenizer(text1, text3, return_tensors='pt')
inputs1.keys()

inputs

inputs1

"""#**Class Label Creation**"""

labels = torch.LongTensor([0])
labels

"""#**Loss calculation**"""

outputs = model(**inputs, labels=labels)
outputs.keys()

outputs1 = model(**inputs1, labels=labels)
outputs1.keys()

outputs.loss

outputs1.loss

outputs.loss.item()

outputs1.loss.item()

"""#**Prediction**"""

outputs = model(**inputs)
outputs.keys()

outputs1 = model(**inputs)
outputs1.keys()

torch.argmax(outputs.logits)

torch.argmax(outputs1.logits)

"""**so Hence as the result of the logit tensor is 0 hence the model believes that text2 comes after text and text3 comes after text1 which is correct**"""